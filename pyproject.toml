[project]
name = "shared-actions"
version = "1.2.2"
description = "Shared GitHub Actions for coverage and testing workflows"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "ISC"}
authors = [
    {name = "Payton McIntosh", email = "pmcintosh@df12.net"},
]
keywords = ["github-actions", "coverage", "testing"]
dependencies = [
    "plumbum>=1.8,<2.0",
    "typer>=0.9,<1.0",
    "lxml>=5.2,<6.0",
    "cyclopts>=2.9,<3.0",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]


[dependency-groups]
dev = [
    "lxml-stubs>=0.5.1",
    "pytest>=8.0,<9.0",
    "pyyaml>=6.0,<7.0",
    "ty>=0.0.1a20",
    "uuid6>=2025.0.1",
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    "F",        # Pyflakes rules
    "W",        # PyCodeStyle warnings
    "E",        # PyCodeStyle errors
    "I",        # Sort imports properly
    "UP",       # Warn if certain things can changed due to newer Python versions
    "C4",       # Catch incorrect use of comprehensions, dict, list, etc
    "FA",       # Enforce from __future__ import annotations
    "ISC",      # Good use of string concatenation
    "ICN",      # Use common import conventions
    "RET",      # Good return practices
    "SIM",      # Common simplification rules
    "TID",      # Some good import practices
    "TC",       # Enforce importing certain types in a TYPE_CHECKING block
    "PTH",      # Use pathlib instead of os.path
    "TD",       # Be diligent with TODO comments
    "A",        # detect shadowed builtins
    "BLE",      # disallow catch-all exceptions
    "S",        # disallow things like "exec"; also restricts "assert" but I just NOQA it when I really need it
    "DTZ",      # require strict timezone manipulation with datetime
    "FBT",      # detect boolean traps
    "N",        # enforce naming conventions, e.g. ClassName vs function_name
    "FURB",
    "B",
    "RUF",
    "LOG",
    "Q",
    "PT",
    "RSE",
    "PERF",
    "TRY",
    "D",
    "ANN",
]
per-file-ignores = {"**/test_*.py" = ["S101"]}
ignore = ["D205"]

[tool.ruff.lint.flake8-import-conventions]
# Declare the banned `from` imports.
banned-from = [
    "typing",
    "datetime",
    "collections.abc",
    "dataclasses",
    "enum",
    "unittest.mock",
    "msgspec",
    "msgspec.json",
]

[tool.ruff.lint.flake8-import-conventions.aliases]
"collections.abc" = "cabc"
datetime = "dt"
"unittest.mock" = "mock"
msgspec = "ms"
"msgspec.json" = "msjson"
typing = "typ"

[tool.ruff.lint.pydocstyle]
# Enforce NumPy docstring style
convention = "numpy"

[tool.pytest.ini_options]
# Ensure asyncio fixtures create a new event loop for each test
asyncio_default_fixture_loop_scope = "function"
# Tests automatically killed after seconds elapsed
timeout = 30

[tool.uv]
package = false

[tool.pyright]
typeCheckingMode = "strict"
reportUnknownVariableType = "error"
reportUnknownParameterType = "error"
reportUnknownMemberType = "error"
reportMissingTypeStubs = "warning"
pythonVersion = "3.12"
venvPath = "."
venv = ".venv"
