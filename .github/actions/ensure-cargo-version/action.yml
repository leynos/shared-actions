name: ensure-cargo-version
description: Validate that release tags match the version declared in one or more Cargo manifests.
author: leynos
inputs:
  manifests:
    description: >-
      Newline or whitespace separated list of Cargo.toml manifest paths to validate.
    default: Cargo.toml
  tag-prefix:
    description: Prefix to strip from the Git reference name before comparison.
    default: v
  check-tag:
    description: >-
      When set to "false", skip comparing the tag-derived version against the manifest version(s).
    default: "true"
runs:
  using: composite
  steps:
    - name: Set up Python 3.13
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
      with:
        python-version: "3.13"
    - name: Install uv
      # v6.4.3
      uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc
      with:
        cache-dependency-glob: |
          **/pyproject.toml
          **/uv.lock
          **/scripts/*.py
    - name: Provision Python 3.13
      shell: bash
      run: uv python install 3.13
      - id: verify
        name: Verify Cargo manifest version matches tag
        shell: bash
        env:
          INPUT_MANIFESTS: ${{ inputs.manifests }}
          INPUT_TAG_PREFIX: ${{ inputs.tag-prefix }}
          INPUT_CHECK_TAG: ${{ inputs.check-tag }}
        run: |
          set -euo pipefail

          lower_check_tag="$(printf '%s' "${INPUT_CHECK_TAG}" | tr '[:upper:]' '[:lower:]')"
          case "${lower_check_tag}" in
            ""|"true"|"1"|"yes"|"on")
              INPUT_CHECK_TAG="true"
              ;;
            "false"|"0"|"no"|"off")
              INPUT_CHECK_TAG="false"
              ;;
            *)
              echo "::error title=Invalid input::Unsupported value for check-tag: ${INPUT_CHECK_TAG}" >&2
              exit 1
              ;;
          esac

          export INPUT_CHECK_TAG

          uv run "${GITHUB_ACTION_PATH}/scripts/ensure_cargo_version.py"
outputs:
  version:
    description: Version number derived from the tag reference.
    value: ${{ steps.verify.outputs.version }}
  crate-version:
    description: Version number declared in the first Cargo manifest.
    value: ${{ steps.verify.outputs['crate-version'] }}
