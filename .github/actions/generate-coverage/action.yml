name: Generate coverage
description: Run test coverage for Rust, Python and mixed Rust and Python projects
inputs:
  features:
    description: Cargo features to enable
    required: false
    type: string
  with-default-features:
    description: Enable default features
    required: false
    type: boolean
    default: true
  output-path:
    description: Output file path
    required: true
    type: string
  format:
    description: Coverage format
    required: false
    type: string
    default: cobertura
outputs:
  file:
    description: Path to the generated coverage file
    value: ${{ steps.out.outputs.file }}
  format:
    description: Format of the coverage file
    value: ${{ steps.out.outputs.format }}
  lang:
    description: Detected project language
    value: ${{ steps.detect.outputs.lang }}
runs:
  using: composite
  steps:
    - id: detect
      run: uv run --script scripts/generate_coverage/detect.py
      shell: bash
    - id: rust
      if: steps.detect.outputs.lang == 'rust' || steps.detect.outputs.lang == 'mixed'
      run: uv run --script scripts/generate_coverage/run_rust.py
      env:
        DETECTED_LANG: ${{ steps.detect.outputs.lang }}
        DETECTED_FMT: ${{ steps.detect.outputs.fmt }}
      shell: bash
    - name: Install uv and set the python version
      if: steps.detect.outputs.lang == 'python' || steps.detect.outputs.lang == 'mixed'
      uses: astral-sh/setup-uv@v5

    - name: Cache Python deps
      if: steps.detect.outputs.lang == 'python' || steps.detect.outputs.lang == 'mixed'
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-py-deps-${{ hashfiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-py-deps-

    - name: Install slipcover and pytest
      if: steps.detect.outputs.lang == 'python' || steps.detect.outputs.lang == 'mixed'
      run: uv pip install --system slipcover pytest
      shell: bash

    - id: python
      if: steps.detect.outputs.lang == 'python' || steps.detect.outputs.lang == 'mixed'
      run: uv run --script scripts/generate_coverage/run_python.py
      env:
        DETECTED_LANG: ${{ steps.detect.outputs.lang }}
        DETECTED_FMT: ${{ steps.detect.outputs.fmt }}
      shell: bash
    - if: steps.detect.outputs.lang == 'mixed'
      run: uv run --script scripts/generate_coverage/merge_cobertura.py
      env:
        RUST_FILE: ${{ steps.rust.outputs.file }}
        PYTHON_FILE: ${{ steps.python.outputs.file }}
        OUTPUT_PATH: ${{ inputs.output-path }}
      shell: bash
    - id: out
      run: uv run --script scripts/generate_coverage/set_outputs.py
      env:
        DETECTED_FMT: ${{ steps.detect.outputs.fmt }}
      shell: bash
