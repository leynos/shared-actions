name: Install nfpm
description: Install the nfpm CLI into the runner environment
runs:
  using: composite
  steps:
    - name: Install nfpm
      shell: bash
      run: |
        set -euo pipefail
        ver="v2.39.0"
        uname_s="$(uname -s)"
        uname_m="$(uname -m)"
        case "$uname_s" in
          Linux) asset_os="Linux" ;;
          Darwin) asset_os="Darwin" ;;
          *) echo "::error:: unsupported OS: $uname_s"; exit 1 ;;
        esac
        case "$uname_m" in
          x86_64) asset_arch="x86_64" ;;
          aarch64|arm64) asset_arch="arm64" ;;
          *) echo "::error:: unsupported arch: $uname_m"; exit 1 ;;
        esac
        asset="nfpm_${ver#v}_${asset_os}_${asset_arch}.tar.gz"
        base_url="https://github.com/goreleaser/nfpm/releases/download/${ver}"
        tmp_dir="$(mktemp -d)"
        trap 'rm -rf "$tmp_dir"' EXIT
        curl -fsSL "${base_url}/${asset}" -o "${tmp_dir}/${asset}"
        curl -fsSL "${base_url}/checksums.txt" -o "${tmp_dir}/checksums.txt"
        if command -v sha256sum >/dev/null 2>&1; then
          (
            cd "${tmp_dir}"
            grep "  ${asset}$" checksums.txt | sha256sum --check -
          )
        else
          expected="$(grep "  ${asset}$" "${tmp_dir}/checksums.txt" | awk '{print $1}')"
          echo "${expected}  ${tmp_dir}/${asset}" | shasum -a 256 --check -
        fi
        tar -xzf "${tmp_dir}/${asset}" -C "${tmp_dir}" nfpm
        install -m 0755 "${tmp_dir}/nfpm" "${RUNNER_TEMP}/nfpm"
        echo "${RUNNER_TEMP}" >> "${GITHUB_PATH}"
