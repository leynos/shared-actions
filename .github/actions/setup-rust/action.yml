name: Setup Rust
description: Install Rust and cache cargo registry
inputs:
  install-postgres-deps:
    description: Install PostgreSQL system dependencies
    required: false
    default: false
runs:
  using: composite
  steps:
    - name: Install rust
      uses: actions-rust-lang/setup-rust-toolchain@9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9
      with:
        override: true
        components: rustfmt, clippy, llvm-tools-preview
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/${{ env.BUILD_PROFILE }}
        key: ${{ runner.os }}-cargo-${{ env.BUILD_PROFILE }}-${{ hashFiles('rust-toolchain.toml', '**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ env.BUILD_PROFILE }}-
    - name: Install system dependencies
      if: ${{ inputs.install-postgres-deps == 'true' && runner.os == 'Linux' }}
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libpq-dev
      shell: bash
    - name: Install libpq (headers + import library)
      if: ${{ inputs.install-postgres-deps == 'true' && runner.os == 'Windows' }}
      shell: pwsh
      run: |
        # Install PostgreSQL 17 but suppress the server service â€“ we only need the client bits
        choco install postgresql17 --no-progress -y --params '/Password:postgres /NoService /SkipStackBuilder'

        # Tell the rest of the job where the headers and import library are
        $pgRoot = "${Env:ProgramFiles}\PostgreSQL\17"
        "PG_INCLUDE=$pgRoot\include" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        "PG_LIB=$pgRoot\lib"         | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "$pgRoot\bin"           | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
