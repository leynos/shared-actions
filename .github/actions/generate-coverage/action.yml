name: Generate coverage
description: Run test coverage for Rust, Python and mixed Rust and Python projects
inputs:
  features:
    description: Cargo features to enable
    required: false
  with-default-features:
    description: Enable default features
    required: false
    default: "true"
  output-path:
    description: Output file path
    required: true
  format:
    description: Coverage format
    required: false
    default: cobertura
  with-ratchet:
    description: Fail if coverage falls below the stored baseline
    required: false
    default: "false"
  baseline-rust-file:
    description: Path to store the Rust coverage baseline
    required: false
    default: .coverage-baseline.rust
  baseline-python-file:
    description: Path to store the Python coverage baseline
    required: false
    default: .coverage-baseline.python
outputs:
  file:
    description: Path to the generated coverage file
    value: ${{ steps.out.outputs.file }}
  format:
    description: Format of the coverage file
    value: ${{ steps.out.outputs.format }}
  lang:
    description: Detected project language
    value: ${{ steps.detect.outputs.lang }}
runs:
  using: composite
  steps:
    - name: Setup uv
      # v6.4.3
      uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc
    - id: detect
      run: uv run --script "${{ github.action_path }}/scripts/detect.py"
      shell: bash
    - name: Restore baselines
      if: inputs.with-ratchet == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ${{ inputs.baseline-rust-file }}
          ${{ inputs.baseline-python-file }}
        key: ratchet-baseline-${{ runner.os }}
    - name: Ensure baseline files
      if: inputs.with-ratchet == 'true'
      run: |
        if [ ! -f "${{ inputs.baseline-rust-file }}" ]; then
          mkdir -p "$(dirname '${{ inputs.baseline-rust-file }}')"
          echo 0 > "${{ inputs.baseline-rust-file }}"
        fi
        if [ ! -f "${{ inputs.baseline-python-file }}" ]; then
          mkdir -p "$(dirname '${{ inputs.baseline-python-file }}')"
          echo 0 > "${{ inputs.baseline-python-file }}"
        fi
      shell: bash
    - id: rust
      if: steps.detect.outputs.lang == 'rust' || steps.detect.outputs.lang == 'mixed'
      run: uv run --script "${{ github.action_path }}/scripts/run_rust.py"
      env:
        DETECTED_LANG: ${{ steps.detect.outputs.lang }}
        DETECTED_FMT: ${{ steps.detect.outputs.fmt }}
      shell: bash
    - name: Ratchet coverage
      if: inputs.with-ratchet == 'true'
      run: |
        ratchet() {
          uv run --script "${{ github.action_path }}/scripts/ratchet_coverage.py" \
            --baseline-file "$1" \
            --current "$2"
        }

        lang="${{ steps.detect.outputs.lang }}"
        if [[ "$lang" == "rust" || "$lang" == "mixed" ]]; then
          ratchet "${{ inputs.baseline-rust-file }}" "${{ steps.rust.outputs.percent }}"
        fi
        if [[ "$lang" == "python" || "$lang" == "mixed" ]]; then
          ratchet "${{ inputs.baseline-python-file }}" "${{ steps.python.outputs.percent }}"
        fi
      shell: bash
    - name: Save baselines
      if: success() && inputs.with-ratchet == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ${{ inputs.baseline-rust-file }}
          ${{ inputs.baseline-python-file }}
        key: ratchet-baseline-${{ runner.os }}-${{ github.run_id }}
        restore-keys: ratchet-baseline-${{ runner.os }}-

    - name: Cache Python deps
      if: steps.detect.outputs.lang == 'python' || steps.detect.outputs.lang == 'mixed'
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-py-deps-${{ hashfiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-py-deps-

    - name: Install slipcover and pytest
      if: steps.detect.outputs.lang == 'python' || steps.detect.outputs.lang == 'mixed'
      run: uv pip install --system slipcover pytest
      shell: bash

    - id: python
      if: steps.detect.outputs.lang == 'python' || steps.detect.outputs.lang == 'mixed'
      run: uv run --script "${{ github.action_path }}/scripts/run_python.py"
      env:
        DETECTED_LANG: ${{ steps.detect.outputs.lang }}
        DETECTED_FMT: ${{ steps.detect.outputs.fmt }}
      shell: bash
    - if: steps.detect.outputs.lang == 'mixed'
      run: uv run --script "${{ github.action_path }}/scripts/merge_cobertura.py"
      env:
        RUST_FILE: ${{ steps.rust.outputs.file }}
        PYTHON_FILE: ${{ steps.python.outputs.file }}
        OUTPUT_PATH: ${{ inputs.output-path }}
      shell: bash
    - id: out
      run: uv run --script "${{ github.action_path }}/scripts/set_outputs.py"
      env:
        DETECTED_FMT: ${{ steps.detect.outputs.fmt }}
      shell: bash
    - name: Archive coverage
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.out.outputs.format }}
        path: ${{ steps.out.outputs.file }}
        retention-days: 14
